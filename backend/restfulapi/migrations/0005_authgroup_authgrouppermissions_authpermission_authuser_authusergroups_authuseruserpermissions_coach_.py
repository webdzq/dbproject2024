# Generated by Django 3.2.25 on 2024-03-23 12:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('restfulapi', '0004_delete_music'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('coach_id', models.IntegerField(primary_key=True, serialize=False)),
                ('coach_name', models.TextField()),
                ('nationality', models.CharField(blank=True, max_length=255, null=True)),
                ('start_year', models.IntegerField(blank=True, null=True)),
                ('num_champion', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Coach',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('game_id', models.IntegerField(primary_key=True, serialize=False)),
                ('game_season', models.TextField(blank=True, null=True)),
                ('game_date', models.DateField(blank=True, null=True)),
                ('score_winner', models.IntegerField(blank=True, null=True)),
                ('score_loser', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogTest',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'log_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('song', models.CharField(default='', max_length=100)),
                ('singer', models.CharField(default='', max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'music',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('player_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('age', models.IntegerField(blank=True, null=True)),
                ('team_name', models.TextField(blank=True, null=True)),
                ('jersey_number', models.IntegerField(blank=True, null=True)),
                ('guard_position', models.TextField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('last_attended', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('salary', models.FloatField(blank=True, null=True)),
                ('introduce', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'player',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('season_id', models.IntegerField(primary_key=True, serialize=False)),
                ('season_year', models.CharField(max_length=255)),
                ('mvp', models.TextField(blank=True, null=True)),
                ('year', models.CharField(blank=True, db_column='Year', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Season',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stadium',
            fields=[
                ('stadium_id', models.IntegerField(primary_key=True, serialize=False)),
                ('stadium_name', models.TextField()),
                ('location', models.TextField(blank=True, db_column='Location', null=True)),
                ('std_size', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Stadium',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.IntegerField(primary_key=True, serialize=False)),
                ('team_name', models.TextField()),
                ('city', models.CharField(blank=True, max_length=25, null=True)),
                ('year_founded', models.IntegerField(blank=True, null=True)),
                ('introduce', models.TextField(blank=True, null=True)),
                ('stadium_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewCoachList',
            fields=[
                ('coach_id', models.IntegerField(primary_key=True, serialize=False)),
                ('coach_name', models.TextField()),
                ('nationality', models.CharField(max_length=255)),
                ('start_year', models.IntegerField()),
                ('num_champion', models.IntegerField()),
                ('Team_Name', models.TextField()),
            ],
            options={
                'db_table': 'view_coach_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerStatistic',
            fields=[
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='restfulapi.player')),
                ('game_played_count', models.IntegerField(blank=True, null=True)),
                ('min_played', models.FloatField(blank=True, null=True)),
                ('points', models.FloatField(blank=True, null=True)),
                ('field_goals_made', models.FloatField(blank=True, null=True)),
                ('field_goals_attempted', models.FloatField(blank=True, null=True)),
                ('field_goals_percentage', models.FloatField(blank=True, null=True)),
                ('number_3_points_goal_made', models.FloatField(blank=True, db_column='3_points_goal_made', null=True)),
                ('number_3_points_goal_attempted', models.FloatField(blank=True, db_column='3_points_goal_attempted', null=True)),
                ('number_3_points_goal_percentage', models.FloatField(blank=True, db_column='3_points_goal_Percentage', null=True)),
                ('free_throws_made', models.FloatField(blank=True, null=True)),
                ('free_throws_attempted', models.FloatField(blank=True, null=True)),
                ('free_throw_percentage', models.FloatField(blank=True, null=True)),
                ('offensive_rebounds', models.FloatField(blank=True, null=True)),
                ('defensive_rebounds', models.FloatField(blank=True, null=True)),
                ('total_rebounds', models.FloatField(blank=True, null=True)),
                ('assists', models.FloatField(blank=True, null=True)),
                ('turnovers', models.FloatField(blank=True, null=True)),
                ('steels', models.FloatField(blank=True, null=True)),
                ('blocks', models.FloatField(blank=True, null=True)),
                ('personal_fouls', models.FloatField(blank=True, null=True)),
                ('fantacy_points', models.FloatField(blank=True, null=True)),
                ('doubles_doubles', models.FloatField(blank=True, null=True)),
                ('triple_doubles', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Player_statistic',
                'managed': False,
            },
        ),
    ]
